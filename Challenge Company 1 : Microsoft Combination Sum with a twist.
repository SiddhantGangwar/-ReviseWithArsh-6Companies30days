https://leetcode.com/problems/combination-sum-iii/description/
class Solution {
    void func(int ind,int tar,vector<int>&arr,vector<vector<int>>&res,vector<int>&ds,int k){
       
       if(ind==arr.size()){
            if(tar==0 && k==0){
                res.push_back(ds);
              //  return;
            }
           return;
       }
        if(arr[ind]<=tar){
            ds.push_back(arr[ind]);
            func(ind+1,tar-arr[ind],arr,res,ds,k-1);
            ds.pop_back();
        }
       func(ind+1,tar,arr,res,ds,k);
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int>arr{1,2,3,4,5,6,7,8,9};
        vector<vector<int>>res;
        vector<int>ds;
        func(0,n,arr,res,ds,k);
        // vector<vector<int>>ans;
        // for(auto it:res){
        //     if(it.size()==k)ans.push_back(it);
        // }
        return res;
    }
};
